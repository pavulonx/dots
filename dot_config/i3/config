# shellcheck disable=SC2086

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+b border toggle
# bindsym $mod+u border none
# bindsym $mod+y border pixel 1
# bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
font pango:Lato Bold 9

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec "$TERMINAL"

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id  rofi -show
bindsym $mod+x exec --no-startup-id  rofi -show run

# sound
bindsym $mod+Ctrl+m exec pavucontrol

# Media player controls
bindsym XF86AudioPlay         exec current_player play-pause
bindsym XF86AudioPause        exec current_player play-pause
bindsym XF86AudioNext         exec current_player next
bindsym XF86AudioPrev         exec current_player previous
bindsym XF86AudioRaiseVolume  exec pamixer -i 5
bindsym XF86AudioLowerVolume  exec pamixer -d 5
bindsym XF86AudioMute         exec pamixer -t
bindsym XF86Mail              exec xdg-open 'mailto://'
bindsym XF86Calculator        exec gnome-calculator


# dunst control
bindsym $mod+Mod1+h           exec --no-startup-id dunstctl history-pop
bindsym $mod+Mod1+c           exec --no-startup-id dunstctl context
bindsym $mod+Mod1+space       exec --no-startup-id dunstctl close
bindsym $mod+Mod1+Ctrl+space  exec --no-startup-id dunstctl close-all

# Start Applications
bindsym $mod+o --release exec "$TERMINAL -e ranger"
bindsym $mod+Shift+F12  --release exec --no-startup-id "autorandr common; exec notify-send 'autorandr common'; true"
bindsym $mod+Shift+plus --release exec --no-startup-id "xrandr-menu"
bindsym $mod+Shift+t --release exec --no-startup-id "toggleprogram picom -b --experimental-backends"
bindsym $mod+Shift+d --release exec --no-startup-id "toggleprogram dunst; exec notify-send 'Dunst restart'"

# screenshots
bindsym $mod+Print --release exec --no-startup-id sshot -s

# xkill
bindsym $mod+Shift+Ctrl+x --release exec --no-startup-id xkill

# passwdmenu
bindsym $mod+Shift+p --release exec --no-startup-id passwdmenu
bindsym $mod+Shift+Ctrl+p --release exec --no-startup-id passwdmenu --type

# focus on mouse move
focus_follows_mouse no

# disble jump to workspace on focus for
# no_focus [class="jetbrains-idea"]

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+z workspace back_and_forth
bindsym $mod+Shift+z move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+v split v;exec notify-send 'Split vertically' -t 1000
bindsym $mod+Shift+v split h;exec notify-send 'Split horizontally' -t 1000
# bindsym $mod+v split toggle; exec notify-send "Current split: $(i3-current-window-prop last_split_layout)"

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window or cycle if more
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Move focused workspace to monitor
bindsym $mod+Shift+bracketleft move workspace to output left,  move workspace to output down
bindsym $mod+Shift+bracketright move workspace to output right,  move workspace to output up

# clipboard
bindsym $mod+c exec --no-startup-id clipmenu

# network
bindsym $mod+Ctrl+n exec networkmanager_dmenu

# Workspace names
  set $ws1 "1: "
  set $ws2 "2: "
  set $ws3 "3: "
  set $ws4 "4: "
  set $ws5 "5: "
  set $ws6 "6: "
  set $ws7 "7: "
  set $ws8 "8: "
  set $ws9 "9: "
  set $ws0 "10: "


################
# Theme colors #
################

# Color definition
  set $c_black   #080808
  set $c_accnt   #ebdbb2
  set $c_urgnt   #cc241d

#  Widow Colours
#                         border        backgr.       text      indic.      child_border
  client.focused          $c_accnt      $c_accnt    $c_black   $c_accnt   $c_accnt
  client.focused_inactive $c_black      $c_black    $c_accnt   $c_accnt   $c_black
  client.unfocused        $c_black      $c_black    $c_accnt   $c_accnt   $c_black
  client.urgent           $c_urgnt      $c_urgnt    $c_accnt   $c_accnt   $c_urgnt
  client.background       $c_black



# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws0

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0; workspace $ws0

# Open applications on specific workspaces
assign [class="[cC]hromium"] $ws1
assign [class="[bB]rave-browser*"] $ws1
assign [class="[fF]irefox"] $ws1
assign [class="[fF]irefoxdeveloperedition"] $ws1
#assign [class="[sS]potify"] $ws8
for_window [class="[sS]potify"] move to workspace $ws8
assign [class="[sS]ignal [bB]eta"] $ws7
assign [class="[sS]lack"] $ws7
assign [class="[cC]aprine"] $ws7
assign [class="Steam"] $ws6
assign [class="jetbrains-*"] $ws3

# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="deluge|Deluge-gtk"] floating enable
for_window [class="GParted"] floating enable border normal
for_window [class="[nN]m-connection-editor"] floating enable sticky enable border normal
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="[sS]olaar"] floating enable
for_window [class="Xfburn"] floating enable
for_window [class="[gG]nome-calculator"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Set shut down, restart and locking features
bindsym $mod+Shift+e exec --no-startup-id powermenu

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
bindsym $mod+Mod1+l exec --no-startup-id lockscreen

# Autostart applications
# exec --no-startup-id autorandr -c

exec_always --no-startup-id wallpaper restore
exec_always --no-startup-id ~/.config/polybar/launch.sh

##
# 'bar' section has been removed, using polybar instead
##

# hide/unhide i3status bar
bindsym $mod+m exec polybar-msg cmd toggle


#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 8
gaps outer -4

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
