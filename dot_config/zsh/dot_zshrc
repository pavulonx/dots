[[ $- != *i* ]] && return # If not running interactively, don't do anything

# add plugins directory to fpath
fpath=($ZDOTDIR/completions $ZDOTDIR/plugins $fpath)

alias reload='source $ZDOTDIR/.zshrc'
alias zshconf='$EDITOR $ZDOTDIR/.zshrc'

source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/shrc"           # common config
shrc_local="${XDG_CONFIG_HOME:-$HOME/.config}/shell/shrc.local" # local config
[ -e "$shrc_local" ] && source "$shrc_local"

# ---[ options ]---
setopt long_list_jobs         # job notifications in the long format
setopt interactive_comments   # recognize comments in input
setopt auto_cd                # if command cannot be executed and it is dir cd into it
setopt auto_pushd             # cd but with pushing onto dir stack
setopt pushd_ignore_dups      # ignore pushd duplicates
setopt pushd_minus            # - instead of + in cd

# ---[ history ]---
HISTSIZE=90000
SAVEHIST=90000
HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/zsh/history"
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data

# ---[ completion ]---
__completions_init() {
  autoload -U compinit && compinit && _comp_options+=(globdots)
  autoload -U +X bashcompinit && bashcompinit # automatically load bash completion functions

  #settings
  unsetopt menu_complete   # do not autoselect the first completion entry
  unsetopt flowcontrol
  setopt auto_menu
  setopt always_to_end
  setopt complete_in_word

  zstyle ':completion::complete:*' use-cache on # Use caching so that commands like apt and dpkg complete are useable
  zstyle ':completion::complete:*' cache-path "${XDG_CACHE_HOME:-$HOME/.cache}/zsh"

  zstyle ':completion:*' menu select
  zstyle ':completion:*' verbose yes
  zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*' # Case-insensitive completion
  zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

  # Fuzzy match mistyped completions.
  zstyle ':completion:*' completer _complete _match _approximate
  zstyle ':completion:*:match:*' original only
  zstyle ':completion:*:approximate:*' max-errors 1 numeric
  # Increase the number of errors based on the length of the typed word. But make sure to cap (at 7) the max-errors to avoid hanging
  zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3>7?7:($#PREFIX+$#SUFFIX)/3))numeric)'

  zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
  zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"
  zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories # disable named-directories autocompletion
}
# ---[ Key bindings ]---
bindkey -v
export KEYTIMEOUT=1

# menu navigation  vim keys
zmodload -i zsh/complist
bindkey -M menuselect '^@'  accept-and-infer-next-history  # ctrl + <space>
bindkey -M menuselect 'h'   vi-backward-char               # left
bindkey -M menuselect 'k'   vi-up-line-or-history          # up
bindkey -M menuselect 'l'   vi-forward-char                # right
bindkey -M menuselect 'j'   vi-down-line-or-history        # bottom

# key bindings
bindkey  "^[[H"   beginning-of-line      # Home
bindkey  "^[[F"   end-of-line            # End
bindkey  "^[[2~"  overwrite-mode         # Insert
bindkey  "^[[3~"  delete-char            # Delete
bindkey  "^?"     backward-delete-char   # Backspace
bindkey  "^[[D"   backward-char          # Left
bindkey  "^[[C"   forward-char           # Right
bindkey  "^[[5~"  up-line-or-history     # PageUp
bindkey  "^[[6~"  down-line-or-history   # PageDown
bindkey  "^[[Z"   reverse-menu-complete  # ShiftTab
bindkey '^[[1;5C' forward-word           # Ctrl+Right
bindkey '^[[1;5D' backward-word          # Ctrl+Left

# ci", ci', ci`, di", etc
autoload -U select-quoted && zle -N select-quoted
for m in visual viopp; do; for c in {a,i}{\',\",\`}; do;
  bindkey -M $m $c select-quoted
done; done;

# ci{, ci(, ci<, di{, etc
autoload -U select-bracketed && zle -N select-bracketed
for m in visual viopp; do; for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do;
  bindkey -M $m $c select-bracketed
done; done;

## keyup and  keydown search
autoload -U up-line-or-beginning-search && zle -N up-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search    # Down
bindkey "^[k" up-line-or-beginning-search     # Alt+K
autoload -U down-line-or-beginning-search && zle -N down-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search  # Down
bindkey "^[j" down-line-or-beginning-search   # Alt+J

#bindkey '^R' history-incremental-search-backward      # [Ctrl-r] - Search backward incrementally currently handled by plugin

# Edit line in vim buffer ctrl-v
autoload edit-command-line; zle -N edit-command-line;
bindkey '^v' edit-command-line
# Enter vim buffer from normal mode
autoload -U edit-command-line && zle -N edit-command-line;
bindkey -M vicmd "^v" edit-command-line

# programs shortcuts
bindkey -s "^F" "ctrlf\n"
bindkey -s "^O" "openf\n"
bindkey -s "^G" "zi\n"

# ---[ Style plugins ]---
autoload -Uz vi_style_suppport;   vi_style_suppport
autoload -Uz prompt_theme;        prompt_theme
autoload -Uz term_window_title;   term_window_title

# ---[ zinit ]---
if [ ! -f $ZDOTDIR/.zinit/bin/zinit.zsh ]; then
  print -P "%F{33}Installing zinit%f"
  command mkdir -p "$ZDOTDIR/.zinit"
  command git clone https://github.com/zdharma-continuum/zinit "$ZDOTDIR/.zinit/bin"
fi
source "$ZDOTDIR/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit


zinit wait lucid for \
    ajeetdsouza/zoxide \
  atinit"ZINIT[COMPINIT_OPTS]=-C; __completions_init; zpcdreplay;" \
    zdharma-continuum/fast-syntax-highlighting \
  atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
  blockf \
    zsh-users/zsh-completions

zinit wait"1" lucid for \
    zdharma-continuum/history-search-multi-word


alias zi=__zoxide_zi
export _ZO_FZF_OPTS="+s -e --preview='eza --level 2 --tree --color=always --group-directories-first {2}' $FZF_DEFAULT_OPTS"

[ -e "$HOME/TODO" ] && cat "$HOME/TODO"

# vim: ft=zsh sw=2 ts=2 et
