# setup path
_user_path="$(find ~/.local/bin -type d | tac | tr '\n' ':')"
_user_path="${_user_path}$HOME/.local/share/coursier/bin:$HOME/.local/share/ghcup/.ghcup/bin:$HOME/.local/share/yarn/bin:$HOME/.local/share/cargo/bin:$HOME/.local/share/go/bin"
export PATH="${_user_path}:${PATH}"

# default programs
export TERMINAL="/usr/bin/alacritty"
export EDITOR="nvim"
export VISUAL="$EDITOR"
export BROWSER="/usr/bin/firefox"
export READER="zathura"
export PAGER="less"

# xdg config
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-"/run/user/$UID"}"

# gui
export RUNGUI_LOCK_FILE="$XDG_RUNTIME_DIR/rungui.lock"

# home dir debloat
export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
export STACK_ROOT="$XDG_DATA_HOME/stack"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export GOPATH="$XDG_DATA_HOME/go"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
export _Z_DATA="$XDG_DATA_HOME/z"
export _ZL_DATA="$_Z_DATA"
export ELECTRUMDIR="$XDG_DATA_HOME/electrum"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export GHCUP_INSTALL_BASE_PREFIX="$HOME/.local/share/ghcup"
export XMONAD_DATA_DIR="$XDG_DATA_HOME/xmonad"
export XMONAD_CONFIG_DIR="$XDG_CONFIG_HOME/xmonad"
export XMONAD_CACHE_DIR="$XDG_CACHE_HOME/xmonad"
export PARALLEL_HOME="$XDG_CONFIG_HOME/parallel"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"

# programs settings
export SUOD=doas
export LESSHISTFILE="-"
export CM_LAUNCHER=rofi
export QT_QPA_PLATFORMTHEME="qt5ct"

# start ssh agent using ssha wrapper
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
export SSH_AGENT_PID_FILE="$XDG_RUNTIME_DIR/ssh-agent.pid"
command -v ssha >/dev/null 2>&1 && eval "$(ssha 2>/dev/null)"

# source local profile settings if present
_profile_local="$XDG_CONFIG_HOME/shell/profile.local"
[ -e "$_profile_local" ] && . "$_profile_local"

# run rungui if on tty1 and lock file doesnt exist
if [ "$(tty)" = "/dev/tty1" ] && ! [ -s "$RUNGUI_LOCK_FILE" ]; then
  rungui
fi

# vi:syntax=sh
