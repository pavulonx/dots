#!/bin/sh
set -f

BACKUP_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}/backup"

_fail() {
  echo "$*" >&2
  exit 1
}

_help() {
  echo "usage: $0 <command> <config> [<args>]

commands:
  run | backup     run backup
  exec             execute restic command against given config

args:
  -n | --dry-run
"
  exit 0
}

command restic >/dev/null 2>&1 ||
  _fail "restic not installed!"

# parse args
dry_run=false
parsed_args=''
for arg; do
  case "$arg" in
    -d|-n|--dry-run) dry_run=true;        shift ;;
     -h|--help|help) _help;               shift ;;
                  *) parsed_args="$parsed_args $arg"; shift ;;
  esac
done

# shellcheck disable=SC2086
set -- $parsed_args
[ -z "$parsed_args" ] && _help

action="$1"
conf="$2"
shift 2

# validate & parse config
conf_dir="$BACKUP_CONFIG_HOME/$conf"
configrc="$conf_dir/configrc"
configignore="$conf_dir/ignore"
test -f "$configrc" || _fail "configrc for $conf not found!"

_rc="$(grep -E '^(BACKUP_REPOSITORY|BACKUP_SOURCE|BACKUP_PASS_CMD)=' "$configrc")"
eval "$_rc"

echo "$conf:
  BACKUP_REPOSITORY: $BACKUP_REPOSITORY
  BACKUP_SOURCE:     $BACKUP_SOURCE
  BACKUP_PASS_CMD:   $BACKUP_PASS_CMD
"

RESTIC_REPOSITORY="$BACKUP_REPOSITORY"
RESTIC_PASSWORD_COMMAND="$BACKUP_PASS_CMD"
export RESTIC_REPOSITORY RESTIC_PASSWORD_COMMAND

_backup() {
  echo '> runing backup'
  set --
  "$dry_run"             && set -- "$@" --dry-run
  [ -f "$configignore" ] && set -- "$@" --exclude-file="$configignore"
  restic backup "$BACKUP_SOURCE" "$@"
}

_stats() {
  echo '> runing stats'
  restic stats
}

_exec() {
  echo "> runing exec '$*'"
  restic "$@"
}

# TODO: info about free size, some means to cleanup and so on...
case "$action" in
    run|backup) _backup                              ;;
  s|stats|info) _stats                               ;;
          exec) _exec "$@"                           ;;
             *) _fail "Unrecognized action: $action" ;;
esac
