#!/bin/sh

# TODO:
# - parse 'iw dev $interface link' data - SSID and signal strengh https://eyesaas.com/wi-fi-signal-strength/

interval=2
verbose=false
traffic=false
combined=false

while [ -n "$1" ]; do
  case "$1" in
    -t|--traffic)
      traffic=true
      shift
      ;;
    -c|--combined)
      combined=true;
      shift;
      ;;
    -v|--verbose)
      verbose=true;
      shift;
      ;;
    *)
      echo "Bad argument: '$1'"
      exit 1
      ;;
  esac
done

logv() {
  "$verbose" && echo "$*"; :
}


label=
update_status() {
  _int="$(LANG=C ip route list exact default)"
  _int="${_int#* dev }"
  _int="${_int%% *}"

  if test -n "$_int"; then
    _lb="  LAN"

    wireless=false; test -e "/sys/class/net/$_int/wireless" && wireless=true
    wireless_ssid='WiFi'
    "$wireless" && _lb=" $wireless_ssid"

    if pgrep openvpn || pgrep f5vpn; then # chack if connected via VPN
      _lb="$_lb [VPN]"
    fi
    if ! nc -zw1 1.1.1.1 443 >/dev/null 2>&1; then # check if internet is accessible
      _lb="$_lb  No Internet"
    fi
  else
    _lb=' DOWN'
  fi

  label="$_lb"
}


get_bytes() {
  bytes=0
  for f; do
    read -r b < "$f"
    bytes=$((bytes + b))
  done
  echo "$bytes"
}

tx_old=
rx_old=
tx=
rx=
cx=

update_traffic() {
  tx_new="$(get_bytes /sys/class/net/[ew]*/statistics/tx_bytes)"
  rx_new="$(get_bytes /sys/class/net/[ew]*/statistics/rx_bytes)"
  tx=$((tx_new - tx_old));
  rx=$((rx_new - rx_old));
  cx=$((tx + rx))
  [ $tx -lt 1000 ] && tx=0
  [ $rx -lt 1000 ] && rx=0
  [ $cx -lt 1000 ] && cx=0
  tx_old="$tx_new"
  rx_old="$rx_new"
}

print_status_with_traffic() {
  if "$combined"; then
    printf "%s %sB/s\n" "$label" "$(numfmt --to=iec "$((cx / interval))")"
  else
    printf "%s %s  %s  %s\n" "$label" "$(numfmt --to=iec "$cx")" "$(numfmt --to=iec "$rx")" "$(numfmt --to=iec "$tx")"
  fi
}

if "$traffic"; then
  update_status
  update_traffic
  update_traffic
  print_status_with_traffic
  it=0
  while true; do
    it=$((it + 1))
    sleep "$interval"
    if [ $((it % 20)) -eq 0 ]; then
      update_status
    fi
    update_traffic
    print_status_with_traffic
  done

else
  update_status
  echo "$label"
fi


##
